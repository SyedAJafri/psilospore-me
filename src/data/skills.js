const SKILLS_DATA = {
    languages: [
        {
            title: "Java",
            description: `I have been using Java for 4 years professionally.
            I have a good understanding of Object Orientated principles and have used
            related technologies such as Spring Framework, Hibernate, Maven, and JavaFX.
            See some of those skills for more details.
            `
        },
        {
            title: "Javascript",
            where: "ITG, Jibe, Alertus",            
            description: `
            I have been using Javascript for a few years at ITG, Jibe, and for several side projects.
            I have used related tools and frameworks like Node.js, Typescript, Angular 2, React, and JQuery.
            See some of those skills for more details.            
            `
        },
        {
            title: "Ruby not on Rails",
            description: `
            I've used Ruby at UMD, Jibe, and for some personal projects.
            One my most interesting academic projects involved building a distributed concurrent link-state router that 
            supported operations such as ping, clock synchronization, FTP, and onion routing. Blocking queues were used
            to share packets between threads. Nodes would flood link-state packets that contained neighbor nodes, public keys,
            and weights which were used to build local routing tables. Public keys were used to encrypt generated symmetric keys
            in onion routing.
            I specified that I have no rails experience because many do tend to assume.
            `
        },
        {
            title: "OCaml",
            description: `
            The most enjoyable language I've used. I used it mostly at UMD. One of my classes involved a series of projects that
            created a simplified Ruby like language. Ruby source code was type checked it then parsed into bytecode.
            A virtual machine implementation then evaluated the generated bytecode in OCaml.
            I try to apply functional programming principals in other languages I use.
            `
        },
        {
            title: "Python",
            description: `
            Used at Alertus to rebuild a desktop alert notification program to be multi-platform.
            `
        },
        
    ],
    tools: [
        {
            title: "Angular 2+",
            description: `
            I have used Angular 2 at ITG primarily. I built some of the shared components we used, an extendable service that interacted
            with our API attaching appropriate headers and handling most errors generically across the app, and worked on several of our SPAs.
            I also have an open source fork of ng2-select a library we were using that went unmaintained. We're upgrading it to support angular 4
            and I've done work to allow form controls to be passed in. https://www.npmjs.com/package/ng-next-select
            `
        },
        {
            title: "git",
            description: `
            I have been using git for several years but have used it much more intensively 
            at ITG where I was significantly involved in migrating from SVN, setting up our
            branching model, code review process, and bitbucket integration.
            I was a gatekeeper for our 2 largest repositories for our project, heavily commented
            on many pull requests, involved in release cycle merges, and I mentored a large number
            of coworkers on the basics of git and our process.
            `
        },
        {
            title: "ORMs (Hibernate, Sequelize)",
            description: `
            I have used Hibernate at ITG and I'm aware of some of it's subtleties: lazy loading vs eager loading, when to wrap something up in a transaction to avoid inconsistencies between concurrent queries, how to wire up, and how to debug generated queries, setting up standard patterns for lookup tables to create generic extendable classes that required little configuration, and configuring hibernate to work with an in memory database for consistent unit tests.
            I've also used Sequelize for my Node.js food truck app.
            `
        },
        {
            title: "React",
            description: `
            I'm learning React on my free time. Currently this site is built in React and I'm working on a food truck project as well.
            `
        },
        {
            title: "HTML & CSS",
        },
        {
            title: "Node.js",
            description: `
            I've used Node.js at Jibe, ITG, and personal projects. At Jibe I mostly used it with protractor and at ITG I've used it with Angular 2+.
            My most intensive backend project involves is probably my foodtruck app where I used GraphQL, sequelize, postgress, and express.
            `
        },
        {
            title: "Spring Framework",
            description: `
            I've used Spring to build a REST API at ITG on ASSIST. I've built services for associating and identifying contracts between
            each other in a hierarchical structure, creating and searching interagency agreements, created lookup services for fetched values,
            and worked on downloading batches of files with a multipart form request and transmitting it to our legacy services.
            `
        },
        {
            title: "SQL",
            description: `
            I've used Oracle at ITG and postgres for personal projects.
            I have most of my SQL experience at ITG where I've been involved in setting up tables for our hierarchical contracts,
            creating standard patterns for certain types of tables so it works well with our generic extendable Hibernate entities, and 
            debugging generated SQL from Hibernate for either performance issues or inconsistencies between concurrent queries.
            `
        }
    ]
}
export default SKILLS_DATA;